#!/bin/env ruby
#
# $Id$
#
# Copyright 2007 David Shakaryan <omp@gentoo.org>
# Copyright 2007 Brenden Matthews <brenden@rty.ca>
#
# Distributed under the terms of the GNU General Public License v3
#

require 'omploader'

db = db_connect

FCGI.each_cgi {|cgi|
	begin
		db_check(db)
		visitor_id = register_visit(cgi, db)

		owner_id = get_owner_id(cgi, db)
		query = db.prepare('select referrers.address, sum(count) from referrals inner join referrers on referrers.id = referrals.referrer_id group by referrals.referrer_id order by sum(count) desc limit 10;')
		stmt = query.execute
		top_refs = "\t\t\t" + '<div class="title">Top Referrers</div>' + "\n" +
			"\t\t\t" + '<div class="content">' + "\n" +
			"\t\t\t\t" + '<div class="filelist">' + "\n"
		stmt.num_rows.times do
			res = stmt.fetch
			address = res[0].to_s
			address.length > 60 ? address_listed = address[0..56] + '...' : address_listed = address
			count = res[1].to_s
			top_refs += "\t\t\t\t\t" + '<div class="file">' + "\n" +
				"\t\t\t\t\t\t" + '<span class="filename"><a href="' + address + '">' + address_listed + '</a></span>' + "\n" +
				"\t\t\t\t\t\t" + '<span class="fileinfo">' + count + '</span>' + "\n" +
				"\t\t\t\t\t" + '</div>' + "\n"
		end
		top_refs += "\t\t\t\t" + '</div>' + "\n" +
			"\t\t\t" + '</div>' + "\n"
		stmt.close
		xhtml = top_refs

		db.commit
		cgi.out('text/html') { xhtml_pre + xhtml + xhtml_post }
	rescue Mysql::Error => err
		db.rollback unless db.nil?
		if Debug
			errmsg = err.to_s + '<br />' + err.backtrace.to_s
		else
			errmsg = err.to_s
		end
		cgi.out('text/html') {
			xhtml_pre + '        <div class="content large">Ouch, db error: ' + errmsg + '</div>' + xhtml_post
		}
		log = Logger.new(Paths['log'])
		log.error(cgi.host)
		log.error(cgi.script_name)
		log.error(cgi.params)
		log.error(err)
	rescue RuntimeError => err
		db.rollback unless db.nil?
		cgi.out('text/html') {
			xhtml_pre + '        <div class="content large">' + err + '</div>' + xhtml_post
		}
	rescue SyntaxError, NameError => err
		db.rollback unless db.nil?
		if Debug
			errmsg = err.to_s + '<br />' + err.backtrace.to_s
		else
			errmsg = err.to_s
		end
		cgi.out('text/html') {
			xhtml_pre + '        <div class="content large">Oops, we screwed up.  String won\'t compile: ' + errmsg + '</div>' + xhtml_post
		}
		log = Logger.new(Paths['log'])
		log.error(cgi.host)
		log.error(cgi.script_name)
		log.error(cgi.params)
		log.error(err)
	rescue StandardError => err
		db.rollback unless db.nil?
		if Debug
			errmsg = err.to_s + '<br />' + err.backtrace.to_s
		else
			errmsg = err.to_s
		end
		cgi.out('text/html') {
			xhtml_pre + '        <div class="content large">Oops, we screwed up.  Error running script: ' + errmsg + '</div>' + xhtml_post
		}
		log = Logger.new(Paths['log'])
		log.error(cgi.host)
		log.error(cgi.script_name)
		log.error(cgi.params)
		log.error(err)
	rescue
		db.rollback unless db.nil?
		if Debug
			errmsg = err.to_s + '<br />' + err.backtrace.to_s
		else
			errmsg = err.to_s
		end
		cgi.out('text/html') {
			xhtml_pre + '        <div class="content large">Oops, we screwed up.  This error isn\'t being handled: ' + err + '</div>' + xhtml_post
		}
		log = Logger.new(Paths['log'])
		log.error(cgi.host)
		log.error(cgi.script_name)
		log.error(cgi.params)
		log.error(err)
	end
}
