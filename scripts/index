#!/bin/env ruby
#
# Copyright 2007-2009 David Shakaryan <omp@gentoo.org>
# Copyright 2007-2009 Brenden Matthews <brenden@rty.ca>
#
# Distributed under the terms of the GNU General Public License v3
#

require 'omploader'

diseases = ['happy', 'rabid', 'ugly', 'christian', 'brazilian', 'zombie', 'scientologist', 'retarded', 'horny']
animals = ['gerbils', 'kitties', 'geese', 'turkeys', 'honey badgers', 'Javeeds', 'nerds', 'ninjas', 'vaginas', 'kiwis', 'baby seals', 'gnus']

FCGI.each_cgi {|cgi|
	begin
		db = db_connect
		visitor_id = get_cached_visitor_id(cgi, db)

		owner_id = get_cached_owner_id(cgi, db)

		prefs = Cache.get($0 + 'prefs' + owner_id.to_s)
		if !owner_id.nil? and prefs.nil?
			query = db.prepare('select big, hide_top_files, curl, paste from owners where id = ?')
			stmt = query.execute(owner_id)
			res = stmt.fetch
			stmt.close

			big = res[0].to_i
			hide_top_files = res[1].to_i
			curl = res[2].to_i
			paste = res[3].to_i
			Cache.set($0 + 'prefs' + owner_id, res, Default_cache_expiry_long)
		elsif !prefs.nil?
			big = prefs[0].to_i
			hide_top_files = prefs[1].to_i
			curl = prefs[2].to_i
			paste = prefs[3].to_i
		else
			big = 0
			hide_top_files = 0
			curl = 0
			paste = 0
		end

		update_owner = false
		if cgi.has_key?('paste') and paste != cgi.params['paste'].to_s.to_i
			paste = cgi.params['paste'].to_s.to_i
			update_owner = true
		end
		if cgi.has_key?('big') and big != cgi.params['big'].to_s.to_i
			big = cgi.params['big'].to_s.to_i
			update_owner = true
		end
		if cgi.has_key?('curl')
			if curl != cgi.params['curl'].to_s.to_i
				curl = cgi.params['curl'].to_s.to_i
				update_owner = true
			end
			if paste != 0
				paste = 0
				update_owner = true
			end
		end
		if cgi.has_key?('hide_top_files') and hide_top_files != cgi.params['hide_top_files'].to_s.to_i
			hide_top_files = cgi.params['hide_top_files'].to_s.to_i
			update_owner = true
		end
		if update_owner and !owner_id.nil?
			query = db.prepare('update owners set big = ?, hide_top_files = ?, curl = ?, paste = ? where id = ?')
			stmt = query.execute(big.to_s, hide_top_files.to_s, curl.to_s, paste.to_s, owner_id)
			stmt.close
			prefs = Array.new
			prefs[0] = big.to_s
			prefs[1] = hide_top_files.to_s
			prefs[2] = curl.to_s
			prefs[3] = paste.to_s
			Cache.set($0 + 'prefs' + owner_id, res, Default_cache_expiry_long)
		end

		if hide_top_files == 1
			top_files =
				"\t\t\t" + '<div class="title">' + "\n" +
				"\t\t\t\t" + '<div class="links"><a href="ftop">Encore</a> <span class="separator">&#x2503;</span> <a href="show">+ Show</a></div>' + "\n" +
				"\t\t\t\t" + 'Top Files' + "\n" +
				"\t\t\t" + '</div>'
		else
			top_files = Cache.get($0 + 'top_files')
			if top_files.nil?
				top_files =
				"\t\t\t" + '<div class="title">' + "\n" +
				"\t\t\t\t" + '<div class="links"><a href="ftop">Encore</a> <span class="separator">&#x2503;</span> <a href="hide">- Hide</a></div>' + "\n" +
				"\t\t\t\t" + 'Top Files' + "\n" +
				"\t\t\t" + '</div>' + "\n" +
				"\t\t\t" + '<div class="content">' + "\n"
				top_files_info = ''
				query = db.prepare('select metadata.id, names.name from metadata inner join names on names.id = metadata.name_id inner join content_types on content_types.id = metadata.content_type_id inner join content_types_main on content_types_main.id = content_types.content_type_main_id where content_types_main.type = "image" and unix_timestamp(metadata.creation_time) > unix_timestamp(current_timestamp) - 604800 order by metadata.hits desc, metadata.creation_time desc limit 5')
				stmt = query.execute
				stmt.num_rows.times do
					result = stmt.fetch
					id = result.first.to_s.to_b64
					name = result.last.to_s

					top_files += "\t\t\t\t" + '<div class="thumb float"><div class="container"><a href="v' + id + '"><img src="t' + id + '" alt="View file!" /></a></div></div>' + "\n"
					top_files_info += "\t\t\t\t" + '<div class="info float"><a href="i' + id + '">Info</a></div>' + "\n"
				end
				stmt.close
				top_files += "\t\t\t\t" + '<br class="clear" />' + "\n" + top_files_info + "\t\t\t\t" + '<br class="clear" />' + "\n" +
				"\t\t\t\t" + '<br />' + "\n" +
				"\t\t\t\t" + '<div class="filelist">' + "\n"
				query = db.prepare('select metadata.id, names.name from metadata inner join names on names.id = metadata.name_id inner join content_types on content_types.id = metadata.content_type_id inner join content_types_main on content_types_main.id = content_types.content_type_main_id where content_types_main.type != "image" and unix_timestamp(metadata.creation_time) > unix_timestamp(current_timestamp) - 604800 order by metadata.hits desc, metadata.creation_time desc limit 5')
				stmt = query.execute
				stmt.num_rows.times do
					result = stmt.fetch
					id = result.first.to_s.to_b64
					name = result.last.to_s.gsub(/&/, '&amp;')

					if name.length > 60
						name_displayed = name[0..58] + '…'
					else
						name_displayed = name
					end

					top_files += 
					"\t\t\t\t\t" + '<div class="file">' + "\n" +
					"\t\t\t\t\t\t" + '<span class="filename"><a href="v' + id + '" title="' + name + '">' + name_displayed + '</a></span>' + "\n" +
					"\t\t\t\t\t\t" + '<span class="fileinfo"><a href="i' + id + '">Info</a></span>' + "\n" +
					"\t\t\t\t\t" + '</div>' + "\n"
				end
				stmt.close
				top_files +=
				"\t\t\t\t" + '</div>' + "\n" +
				"\t\t\t" + '</div>' + "\n"
				Cache.set($0 + 'top_files', top_files, Default_cache_expiry_long)
			end
		end

		# what in the poo is this?
		#		query = db.prepare('select count(*) from metadata')
		#		stmt = query.execute
		#		count = stmt.fetch.to_s
		throttle = Cache.get('throttle' + visitor_id)
		if throttle.nil?
			thottle = 0
		end

		if throttle.to_i < Max_upload_count
			if curl == 1 and paste != 1
				input_type = 'field'
				input_name = 'url'
				encoding = ''
			else
				input_type = 'file'
				input_name = 'file'
				encoding = ' enctype="multipart/form-data"'
			end
			if big == 1 and paste != 1
				form =
					"\t\t\t\t" + '<form id="ompload' + input_name + '"' + encoding + ' action="upload" method="post">' + "\n" +
					"\t\t\t\t\t" + '<div class="form">' + "\n" +
					"\t\t\t\t\t\t" + '<input type="' + input_type + '" name="' + input_name + '1" size="25" class="input field" /><br />' + "\n" +
					"\t\t\t\t\t\t" + '<input type="' + input_type + '" name="' + input_name + '2" size="25" class="input field" /><br />' + "\n" +
					"\t\t\t\t\t\t" + '<input type="' + input_type + '" name="' + input_name + '3" size="25" class="input field" /><br />' + "\n" +
					"\t\t\t\t\t\t" + '<input type="' + input_type + '" name="' + input_name + '4" size="25" class="input field" /><br />' + "\n" +
					"\t\t\t\t\t\t" + '<input type="' + input_type + '" name="' + input_name + '5" size="25" class="input field" /><br />' + "\n" +
					"\t\t\t\t\t\t" + '<input type="submit" value="OMPLOAD!" class="button" />' + "\n" +
					"\t\t\t\t\t" + '</div>' + "\n" +
					"\t\t\t\t" + '</form>'
			elsif paste == 1
				form =
					"\t\t\t\t" + '<form id="omploadpaste"' + encoding + ' action="upload" method="post">' + "\n" +
					"\t\t\t\t\t" + '<div class="form">' + "\n" +
					"\t\t\t\t\t\t\t" + '<div class="float name left-align">' + "\n" +
					"\t\t\t\t\t\t\t" + '<div class="label">Name</div>' + "\n" +
					"\t\t\t\t\t\t\t" + '<input type="text" name="name" size="25" class="input field" />' + "\n" +
					"\t\t\t\t\t" + '</div>' + "\n" +
					"\t\t\t\t\t" + '<div class="float left-align">' + "\n" +
					"\t\t\t\t\t\t" + '<div class="label">Syntax</div>' + "\n" +
					"\t\t\t\t\t\t\t" + '<select name="syntax" class="input">' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option selected="selected" value="raw">Plain Text</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="">Auto detect</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option disabled="disabled">––––––––––</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="c">C</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="cobol">COBOL</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="cpp">C++</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="css">CSS</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="diff">Diff</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="fortran">Fortran</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="haskell">Haskell</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="html">HTML</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="java">Java</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="javascript">JavaScript</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="lisp">Lisp</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="mysql">MySQL</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="pascal">Pascal</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="perl">Perl</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="php">PHP</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="python">Python</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="ruby">Ruby</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="scheme">Scheme</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="sh">Shell</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="vb">Visual Basic</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="xhtml">XHTML</option>' + "\n" +
					"\t\t\t\t\t\t\t\t" + '<option value="xml">XML</option>' + "\n" +
					"\t\t\t\t\t\t\t" + '</select>' + "\n" +
					"\t\t\t\t\t\t" + '</div>' + "\n" +
					"\t\t\t\t\t\t" + '<br class="clear" />' + "\n" +
					"\t\t\t\t\t\t" + '<div class="float"><textarea name="paste" class="input" rows="10" cols="10"></textarea></div>' + "\n" +
					"\t\t\t\t\t\t" + '<br class="clear" />' + "\n" +
					"\t\t\t\t\t\t" + '<input type="submit" value="OMPLOAD!" class="button" />' + "\n" +
					"\t\t\t\t\t" + '</div>' + "\n" +
					"\t\t\t\t" + '</form>'
			else
				form =
					"\t\t\t\t" + '<form id="ompload' + input_name + '"' + encoding + ' action="upload" method="post">' + "\n" +
					"\t\t\t\t\t" + '<div class="form">' + "\n" +
					"\t\t\t\t\t\t" + '<input type="' + input_type + '" name="' + input_name + '1" size="25" class="input field" /><br />' + "\n" +
					"\t\t\t\t\t\t" + '<input type="submit" value="OMPLOAD!" class="button" />' + "\n" +
					"\t\t\t\t\t" + '</div>' + "\n" +
					"\t\t\t\t" + '</form>'
			end
		else
			form = "\t\t\t\t" + '<div class="content large">NO COOKIE!</div>'
		end

		if big == 0
			bigger = 'big'
		else
			bigger = 'small'
		end
		animal = animals[rand(animals.size)]
		disease = diseases[rand(diseases.size)]
		xhtml =
			"\t\t\t" + '<div class="content large">' + "\n" +
			"\t\t\t\t" + '<a href="' + bigger + '">' + bigger + ' loader</a> | <a href="l">list</a> | <a href="r">random</a> | <a href="s">stats</a>' + "\n" +
			"\t\t\t\t" + '<div class="powered">powered by ' + rand(1000).to_s + " #{disease} #{animal}</div>\n" +
			"\t\t\t" + '</div>' + "\n" +
			"\t\t\t" + '<div class="title">' + "\n" +
			"\t\t\t\t" + '<div class="links"><a href="file">From File</a> <span class="separator">&#x2503;</span> <a href="curl">From URL</a> <span class="separator">&#x2503;</span> <a href="paste">Pasta!</a></div>' + "\n" +
			"\t\t\t\t" + '<div>Upload</div>' + "\n" +
			"\t\t\t" + '</div>' + "\n" +
			"\t\t\t" + '<div class="content">' + "\n" +
			form + "\n" +
			"\t\t\t" +'</div>' + "\n" +
			top_files

			db.commit
			cgi.out('application/xhtml+xml') { xhtml_pre + xhtml + xhtml_post }
	rescue Mysql::Error => err
		db.rollback unless db.nil?
		if Debug
			errmsg = err.to_s + '<br />' + err.backtrace.join('<br />')
		else
			errmsg = err.to_s
		end
		cgi.out('application/xhtml+xml') {
			xhtml_pre + '        <div class="content large">Ouch, db error: ' + errmsg + '</div>' + xhtml_post
		}
		log = Logger.new(Paths['log'])
		log.error(cgi.host)
		log.error(cgi.script_name)
		log.error(cgi.params)
		log.error(err)
	rescue RuntimeError => err
		db.rollback unless db.nil?
		cgi.out('application/xhtml+xml') {
			xhtml_pre + '        <div class="content large">' + err + '</div>' + xhtml_post
		}
	rescue SyntaxError, NameError => err
		db.rollback unless db.nil?
		if Debug
			errmsg = err.to_s + '<br />' + err.backtrace.join('<br />')
		else
			errmsg = err.to_s
		end
		cgi.out('application/xhtml+xml') {
			xhtml_pre + '        <div class="content large">Oops, we screwed up.  String won\'t compile: ' + errmsg + '</div>' + xhtml_post
		}
		log = Logger.new(Paths['log'])
		log.error(cgi.host)
		log.error(cgi.script_name)
		log.error(cgi.params)
		log.error(err)
	rescue StandardError => err
		db.rollback unless db.nil?
		if Debug
			errmsg = err.to_s + '<br />' + err.backtrace.join('<br />')
		else
			errmsg = err.to_s
		end
		cgi.out('application/xhtml+xml') {
			xhtml_pre + '        <div class="content large">Oops, we screwed up.  Error running script: ' + errmsg + '</div>' + xhtml_post
		}
		log = Logger.new(Paths['log'])
		log.error(cgi.host)
		log.error(cgi.script_name)
		log.error(cgi.params)
		log.error(err)
	rescue MemCache::MemCacheError => err
		db.rollback unless db.nil?
		if Debug
			errmsg = err.to_s + '<br />' + err.backtrace.join('<br />')
		else
			errmsg = err.to_s
		end
		cgi.out('application/xhtml+xml') {
			xhtml_pre + '        <div class="content large">Oops, we screwed up.  Error running script: ' + errmsg + '</div>' + xhtml_post
		}
		log = Logger.new(Paths['log'])
		log.error(cgi.host)
		log.error(cgi.script_name)
		log.error(cgi.params)
		log.error(err)
	rescue
		db.rollback unless db.nil?
		if Debug
			errmsg = err.to_s + '<br />' + err.backtrace.join('<br />')
		else
			errmsg = err.to_s
		end
		cgi.out('application/xhtml+xml') {
			xhtml_pre + '        <div class="content large">Oops, we screwed up.  This error isn\'t being handled: ' + err + '</div>' + xhtml_post
		}
		log = Logger.new(Paths['log'])
		log.error(cgi.host)
		log.error(cgi.script_name)
		log.error(cgi.params)
		log.error(err)
	ensure
		db.close if db
	end
}
