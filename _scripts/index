#!/usr/bin/env ruby
#
# $Id$
#
# Copyright 2007 David Shakaryan <omp@gentoo.org>
# Copyright 2007 Brenden Matthews <brenden@rty.ca>
#
# Distributed under the terms of the GNU General Public License v3
#

require 'omploader'

db = db_connect

FCGI.each_cgi {|cgi|
  begin
    db_check(db)
    db.query('begin')
    visitor_id = register_visit(cgi, db)
  
    owner_id = get_owner_id(cgi, db)
  
    query = db.prepare('select big, hide_top_files, curl, paste from owners where id = ?')
    res = query.execute(owner_id).fetch
    
    big = res[0].to_i
    hide_top_files = res[1].to_i
    curl = res[2].to_i
    paste = res[3].to_i
  
    update_owner = false
    if cgi.has_key?('paste') and paste != cgi.params['paste'].to_s.to_i
      paste = cgi.params['paste'].to_s.to_i
      update_owner = true
    end
    if cgi.has_key?('big') and big != cgi.params['big'].to_s.to_i
      big = cgi.params['big'].to_s.to_i
      update_owner = true
    end
    if cgi.has_key?('curl')
      if curl != cgi.params['curl'].to_s.to_i
        curl = cgi.params['curl'].to_s.to_i
        update_owner = true
      end
      paste = 0
    end
    if cgi.has_key?('hide_top_files') and hide_top_files != cgi.params['hide_top_files'].to_s.to_i
      hide_top_files = cgi.params['hide_top_files'].to_s.to_i
      update_owner = true
    end
    if update_owner
      query = db.prepare('update owners set big = ?, hide_top_files = ?, curl = ?, paste = ? where id = ?')
      query.execute(big.to_s, hide_top_files.to_s, curl.to_s, paste.to_s, owner_id)
    end
#    if cgi.has_key?('paste') and paste != cgi.params['paste'].to_s.to_i
#      paste = cgi.params['paste'].to_s.to_i
#      update_owner = true
#    end
#    if cgi.has_key?('big') and big != cgi.params['paste'].to_s.to_i
#      big = cgi.params['big'].to_s.to_i
#      update_owner = true
#      paste = 0
#    end
#    if cgi.has_key?('hide_top_files') and paste != cgi.params['paste'].to_s.to_i
#      hide_top_files = cgi.params['hide_top_files'].to_s.to_i
#      update_owner = true
#    end
#    if cgi.has_key?('curl') and paste != cgi.params['paste'].to_s.to_i
#      curl = cgi.params['curl'].to_s.to_i
#      update_owner = true
#      paste = 0
#    end
#    if update_owner
#      query = db.prepare('update owners set big = ?, hide_top_files = ?, curl = ?, paste = ? where id = ?')
#      res = query.execute(big.to_s, hide_top_files.to_s, curl.to_s, paste.to_s, owner_id)
#    end
  
    if hide_top_files == 1
      top_files = '      <div class="title">' + "\n" +
        '        <div class="links"><a href="show">Show</a></div>' + "\n" +
        '        Top Files' + "\n" +
        '      </div>'
    else
      top_files = '      <div class="title">' + "\n" +
        '        <div class="links"><a href="hide">Hide</a></div>' + "\n" +
        '        Top Files' + "\n" +
        '      </div>' + "\n" +
        '      <div class="content">' + "\n"
      top_files_info = ''
      query = db.prepare('select
          metadata.id,
          names.name from metadata
          inner join names on names.id = metadata.name_id
          inner join content_types on content_types.id = metadata.content_type_id
          inner join content_types_main on content_types_main.id = content_types.content_type_main_id
        where
          content_types_main.type = "image"
          and unix_timestamp(metadata.creation_time) > unix_timestamp(current_timestamp) - 604800
        order by
          metadata.hits desc,
          metadata.creation_time desc
        limit
          5')
      query.execute.num_rows.times do
        result = query.fetch
        id = result.first.to_s.to_b64
        name = result.last.to_s
  
        top_files += '        <div class="thumb float"><div class="container"><a href="v' + id + '"><img src="t' + id + '" alt="View file!" /></a></div></div>' + "\n"
        top_files_info += '        <div class="info float"><a href="i' + id + '">Info</a></div>' + "\n"
      end
      top_files += '        <br class="clear" />' + "\n" + top_files_info + '        <br class="clear" />' + "\n" +
        '        <br />' + "\n" +
        '        <div class="filelist">' + "\n"
      query = db.prepare('select
          metadata.id,
          names.name from metadata
          inner join names on names.id = metadata.name_id
          inner join content_types on content_types.id = metadata.content_type_id
          inner join content_types_main on content_types_main.id = content_types.content_type_main_id
        where
          content_types_main.type != "image"
          and unix_timestamp(metadata.creation_time) > unix_timestamp(current_timestamp) - 604800
        order by
          metadata.hits desc,
          metadata.creation_time desc
        limit
          5')
      query.execute.num_rows.times do
        result = query.fetch
        id = result.first.to_s.to_b64
        name = result.last.to_s
  
        top_files += '          <span class="filename"><a href="v' + id + '">' + name + '</a></span>' + "\n" +
          '          <span class="fileinfo">&nbsp;&#x2503;&nbsp;<a href="i' + id + '">Info</a></span><br class="clear" />' + "\n"
      end
      top_files += '        </div>' + "\n" +
        '      </div>' + "\n"
    end
  
    query = db.prepare('select count(*) from metadata')
    count = query.execute.fetch.to_s
  
    query = db.prepare('select count from upload_throttle where visitor_id = ?')
    throttle = query.execute(visitor_id).fetch.to_s
  
    if throttle.to_i < Max_upload_count
      if curl == 1
        input_type = 'field'
        input_name = 'url'
      else
        input_type = 'file'
        input_name = 'file'
      end
      if big == 1 and paste != 1
        form =
          '        <form enctype="multipart/form-data" action="upload" method="post">' + "\n" +
          '           <div class="form">' + "\n" +
          '            <input type="' + input_type + '" name="' + input_name + '1" size="25" class="input field" /><br />' + "\n" +
          '            <input type="' + input_type + '" name="' + input_name + '2" size="25" class="input field" /><br />' + "\n" +
          '            <input type="' + input_type + '" name="' + input_name + '3" size="25" class="input field" /><br />' + "\n" +
          '            <input type="' + input_type + '" name="' + input_name + '4" size="25" class="input field" /><br />' + "\n" +
          '            <input type="' + input_type + '" name="' + input_name + '5" size="25" class="input field" /><br />' + "\n" +
          '            <input type="submit" value="OMPLOAD!" class="button" />' + "\n" +
          '          </div>' + "\n" +
          '        </form>'
      elsif paste == 1
        form =
          '        <form enctype="multipart/form-data" action="upload" method="post">' + "\n" +
          '          <div class="form">' + "\n" +
          '            <div class="float name left-align">' + "\n" +
          '              <div class="label">Name</div>' + "\n" +
          '              <input type="line" name="name" size="25" class="input field" />' + "\n" +
          '            </div>' + "\n" +
          '            <div class="float left-align">' + "\n" +
          '              <div class="label">Syntax</div>' + "\n" +
          '              <select name="syntax" class="input">' + "\n" +
          '                <option value="C">C</option>' + "\n" +
          '                <option value="Delphi">Delphi</option>' + "\n" +
          '                <option value="HTML">HTML</option>' + "\n" +
          '                <option selected value="raw">Plain Text</option>' + "\n" +
          '                <option value="Plaintext">Plain Text (Numbered)</option>' + "\n" +
          '                <option value="Ruby">Ruby</option>' + "\n" +
          '                <option value="XML">XML</option>' + "\n" +
          '              </select>' + "\n" +
          '            </div>' + "\n" +
          '            <br class="clear" />' + "\n" +
          '            <div class="float"><textarea name="paste" class="input"></textarea></div>' + "\n" +
          '            <br class="clear" />' + "\n" +
          '            <input type="submit" value="OMPLOAD!" class="button" />' + "\n" +
          '          </div>' + "\n" +
          '        </form>'
      else
        form =
          '        <form enctype="multipart/form-data" action="upload" method="post">' + "\n" +
          '          <div class="form">' + "\n" +
          '            <input type="' + input_type + '" name="' + input_name + '1" size="25" class="input field" /><br />' + "\n" +
          '            <input type="submit" value="OMPLOAD!" class="button" />' + "\n" +
          '          </div>' + "\n" +
          '        </form>'
      end
    else
      form = '        <div class="content large">NO COOKIE!</div>'
    end
  
    if big == 0
      bigger = 'big'
    else
      bigger = 'small'
    end
    xhtml =
      '      <div class="content large">' + "\n" +
      '        <a href="' + bigger + '">' + bigger + ' loader</a> | <a href="l">list</a>' + "\n" +
      '        <div class="powered">powered by web ' + (rand(8999999) + 1000000).to_s + '.' + (rand(899) + 100).to_s.sub(/0$/, (rand(8) + 1).to_s) + ' technology</div>' + "\n" +
      '      </div>' + "\n" +
      '      <div class="title">' + "\n" +
      '        <div class="links"><a href="file">From File</a> &#x2503; <a href="curl">From URL</a> &#x2503; <a href="paste">Pasta!</a></div>' + "\n" +
      '        <div>Upload</div>' + "\n" +
      '      </div>' + "\n" +
      '      <div class="content">' + "\n" +
      form + "\n" +
      '      </div>' + "\n" +
      top_files
 
    cgi.out('text/html') { xhtml_pre + xhtml + xhtml_post }
    db.commit
  rescue Mysql::Error => err
    db.rollback unless db.nil?
    cgi.out('text/html') {
      xhtml_pre + '        <div class="content large">Ouch, db error: ' + err + '</div>' + xhtml_post
    }
  rescue RuntimeError => err
    db.rollback unless db.nil?
    cgi.out('text/html') {
      xhtml_pre + '        <div class="content large">Oops, we screwed up.  ' + err + ' [ ' + err.backtrace.to_s + ' ]</div>' + xhtml_post
    }
  rescue SyntaxError, NameError => err
    db.rollback unless db.nil?
    cgi.out('text/html') {
      xhtml_pre + '        <div class="content large">Oops, we screwed up.  String won\'t compile: ' + err + ' [ ' + err.backtrace.to_s + ' ]</div>' + xhtml_post
    }
  rescue StandardError => err
    db.rollback unless db.nil?
    cgi.out('text/html') {
      xhtml_pre + '        <div class="content large">Oops, we screwed up.  Error running script: ' + err + ' [ ' + err.backtrace.to_s + ' ]</div>' + xhtml_post
    }
  rescue
    db.rollback unless db.nil?
    cgi.out('text/html') {
      xhtml_pre + '        <div class="content large">Oops, we screwed up.  This error isn\'t being handled.</div>' + xhtml_post
    }
  end
}
